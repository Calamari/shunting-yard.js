/**
 * Implementation of the Shunting yard algorithm
 *
 * Licensed under the MIT license.
 * @version 1.0.0
 * @author Georg Tavonius a.k.a. Calamari (http://github.com/Calamari)
 * @homepage http://github.com/Calamari/shunting-yard.js
 */
(function(l){function f(c,b,a,d,j){a=a||"left";return{name:c,precedence:b,params:d,method:j,higherThen:function(a){return b>a.precedence},higherThenEqual:function(a){return b>=a.precedence},equalThen:function(a){return b===a.precedence},lessThen:function(a){return b<a.precedence},lessThenEqual:function(a){return b<=a.precedence},leftAssoc:function(){return"left"===a},rightAssoc:function(){return"right"===a}}}var d=window.jaz||{};d.shuntingYard=function(c){var b=[],a=[],g,j,f,k,e,h;f=0;for(k=c.length;f<
k;++f)if(e=c[f]," "!==e){j&&(e=j+e,j=null);if("("===e)a.push(e);else if(d.Functions[e])a.push(e);else if(")"===e){for(;(h=a.pop())&&"("!==h;)d.Functions[h]||b.push(h);if(h===l)return null}else if(d.Operators[e]){if(!g||"("===g){j=e;continue}for(;a.length;){g=d.Operators[e];h=d.Operators[a[a.length-1]];if(!h||!g)break;if(g.leftAssoc()&&g.lessThenEqual(h)||g.lessThen(h))b.push(a.pop());else break}a.push(e)}else!g||"("===g||d.Operators[g]?b.push(e):b[b.length-1]+=e;g=e}for(;a.length;){e=a.pop();if("("===
e)return null;b.push(e)}return b};d.Operator=f;d.Operators={"+":new f("+",2,"left",2,function(c,b){return c+b}),"-":new f("-",2,"left",2,function(c,b){return c-b}),"*":new f("*",3,"left",2,function(c,b){return c*b}),"/":new f("/",3,"left",2,function(c,b){return c/b}),"^":new f("^",4,"right",2,function(c,b){return Math.pow(c,b)})};d.Function=function(c,b,a){return{name:c,params:b,method:a}};d.Functions={};window.jaz=d;d=window.jaz||{};d.resolveRPN=function(c){var b=[],a,g,f;a=0;for(g=c.length;a<g;++a)(f=
d.Operators[c[a]]||d.Functions[c[a]])?b.push(f.method.apply(this,b.splice(-f.params))):b.push(parseFloat(c[a]));return b[0]};window.jaz=d})();
